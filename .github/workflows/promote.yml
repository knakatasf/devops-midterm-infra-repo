name: Promote Release Candidate

on:
  workflow_dispatch:
  repository_dispatch:
    types: [promote-release]

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v3

      - name: Checkout Source Repo at Release Tag
        uses: actions/checkout@v3
        with:
          repository: knakatasf/devops-midterm-source-repo
          ref: ${{ github.event.client_payload.tag }}
          token: ${{ secrets.ACCESS_TOKEN }}
          path: source-repo

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        run: |
          echo "Logging in to AWS ECR..."
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}

      - name: Build Frontend and Backend Docker Image
        run: |
          cd source-repo/backend
          docker build -t backend-app:latest .
          docker tag backend-app:latest ${{ secrets.AWS_ECR_REPO }}:frontend-${{ github.event.client_payload.tag }}
          cd ../frontend
          docker build -t frontend-app:latest .
          docker tag frontend-app:latest ${{ secrets.AWS_ECR_REPO }}:backend-${{ github.event.client_payload.tag }}

      - name: Push Frontend and Backend Docker Images to ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REPO }}:frontend-${{ github.event.client_payload.tag }}
          docker push ${{ secrets.AWS_ECR_REPO }}:backend-${{ github.event.client_payload.tag }}

      - name: Add SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/my-key.pem
          chmod 600 ~/.ssh/my-key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/my-key.pem ec2-user@${{ secrets.QA_EC2_IP }} << 'EOF'
            docker-compose -f docker-compose.promo.yml up -d
          EOF